{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.browser.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/about/about.component.css","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/account/account.component.css","webpack:///./src/app/components/account/account.component.html","webpack:///./src/app/components/account/account.component.ts","webpack:///./src/app/components/addpost/addpost.component.css","webpack:///./src/app/components/addpost/addpost.component.html","webpack:///./src/app/components/addpost/addpost.component.ts","webpack:///./src/app/components/content/content.component.css","webpack:///./src/app/components/content/content.component.html","webpack:///./src/app/components/content/content.component.ts","webpack:///./src/app/components/editaccount/editaccount.component.css","webpack:///./src/app/components/editaccount/editaccount.component.html","webpack:///./src/app/components/editaccount/editaccount.component.ts","webpack:///./src/app/components/editpost/editpost.component.css","webpack:///./src/app/components/editpost/editpost.component.html","webpack:///./src/app/components/editpost/editpost.component.ts","webpack:///./src/app/components/global.css","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/models/User.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/viewaccount/viewaccount.component.css","webpack:///./src/app/components/viewaccount/viewaccount.component.html","webpack:///./src/app/components/viewaccount/viewaccount.component.ts","webpack:///./src/app/components/viewpost/viewpost.component.css","webpack:///./src/app/components/viewpost/viewpost.component.html","webpack:///./src/app/components/viewpost/viewpost.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/post.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ContentComponent } from '../app/components/content/content.component';\nimport { AboutComponent } from '../app/components/about/about.component';\nimport { LoginComponent } from '../app/components/login/login.component';\nimport { RegisterComponent } from '../app/components/register/register.component';\nimport { AddpostComponent } from './components/addpost/addpost.component';\nimport { ViewpostComponent } from './components/viewpost/viewpost.component';\nimport { EditpostComponent } from './components/editpost/editpost.component';\nimport { AccountComponent } from './components/account/account.component';\nimport { EditaccountComponent } from './components/editaccount/editaccount.component';\nimport { ViewaccountComponent } from './components/viewaccount/viewaccount.component';\nimport { enableProdMode } from '@angular/core';\n\nconst routes: Routes = [\n  { path: 'about', component: AboutComponent },\n  { path: 'auth/login', component: LoginComponent },\n  { path: 'auth/register', component: RegisterComponent }, \n  { path: 'posts/add', component: AddpostComponent }, \n  { path: 'posts/view/:id', component: ViewpostComponent },\n  { path: 'posts/edit/:id', component: EditpostComponent},\n  { path: 'account', component: AccountComponent},\n  { path: 'account/edit', component: EditaccountComponent },\n  { path: 'account/view/:username', component: ViewaccountComponent},\n  { path: '**', component: ContentComponent }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [ RouterModule ],\n  declarations: []\n})\nexport class AppRoutingModule {}\n","import { AppComponent } from './app.component';\nimport { AppModule } from './app.module';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n    \n    @NgModule({\n bootstrap: [AppComponent],\n\n        imports:[\n BrowserModule.withServerTransition({appId: 'app-root'}),\n \n AppModule,\n \n        ]\n    })\n    export class AppBrowserModule {}\n    ","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { CKEditorModule } from 'ngx-ckeditor';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';  \n\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { QuillModule } from 'ngx-quill';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ContentComponent } from './components/content/content.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { AboutComponent } from './components/about/about.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { AddpostComponent } from './components/addpost/addpost.component';\nimport { ViewpostComponent } from './components/viewpost/viewpost.component';\nimport { EditpostComponent } from './components/editpost/editpost.component';\nimport { AccountComponent } from './components/account/account.component';\nimport { EditaccountComponent } from './components/editaccount/editaccount.component';\nimport { ViewaccountComponent } from './components/viewaccount/viewaccount.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    ContentComponent,\n    AboutComponent,\n    RegisterComponent,\n    LoginComponent,\n    AddpostComponent,\n    ViewpostComponent,\n    EditpostComponent,\n    AccountComponent,\n    EditaccountComponent,\n    ViewaccountComponent\n  ],\n  imports:[\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    QuillModule,\n    CKEditorModule\n  ],\n  providers: [],\n})\nexport class AppModule { }\n","module.exports = \".card{\\r\\n    border-radius: 20px;\\r\\n}\\r\\n\\r\\n.header{\\r\\n    text-align: center;\\r\\n    font-family: pacifico;\\r\\n    padding-top:2%;\\r\\n}\\r\\n\\r\\n.sub-header{\\r\\n    font-family: pacifico;\\r\\n    padding-top:4%;\\r\\n    margin-left:5%;\\r\\n}\\r\\n\\r\\n.card-body{\\r\\n    font-size: 20px !important;\\r\\n}\\r\\n\\r\\nul{\\r\\n    font-size: 20px !important;\\r\\n}\\r\\n\\r\\n.container{\\r\\n    margin-bottom: 5%;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container top-buffer\\\">\\n  <div class=\\\"card card-block bg-faded\\\">\\n      <div class=\\\"header\\\">\\n        <h1>About TechFeed</h1>\\n        <hr>\\n      </div>\\n      <p class=\\\"card-body\\\">\\n        TechFeed is a website created as an easy to use hub for interesting developments in technology.\\n        It aims to inform, interest and integrate people in a variety of technology related fields.\\n        I hope TechFeed can be a useful resource and be enjoyed by many.\\n      </p>\\n\\n      <h1 class=\\\"sub-header\\\">Technology Categories</h1><hr>\\n      <p class=\\\"card-body\\\">\\n        TechFeed has a variety of categories to inform readers of the type of post they\\n        will expect before deciding to view. We encourage users to use these categories across\\n        many fields, ranging from programming to business in the tech world.\\n      </p>\\n\\n      <ul>\\n        <li>Software</li>\\n        <li>Web</li>\\n        <li>Mobile</li>\\n        <li>Machine Learning</li>\\n        <li>Robotics</li>\\n        <li>Tech News</li>\\n        <li>Other</li>\\n      </ul>\\n\\n      <h1 class=\\\"sub-header\\\">Post Guidlines</h1><hr>\\n      <p class=\\\"card-body\\\">\\n        Posts should be interesting and original, with correct facts and genuine content, they should have\\n        suitable, SFW imagery. Posts should have correctly selected categories and have suitable titles, relevent\\n        to the post.\\n\\n        Any breaches of these conditions will cause posts to be taken down or even account bans in extreme cases.\\n      </p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css', '../global.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".box{\\r\\n    margin-top:2%;\\r\\n    margin-bottom: 5%;\\r\\n}\\r\\n\\r\\n.box-header{\\r\\n    margin-top: 2%;\\r\\n    text-align: center;\\r\\n    font-family: Pacifico;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    border-radius: 20px;\\r\\n}\\r\\n\\r\\n.text-box{\\r\\n    border-radius: 20px;\\r\\n    font-size: 20px;\\r\\n    height: 5%;\\r\\n}\\r\\n\\r\\n.label{\\r\\n    display:inline-block;\\r\\n    margin-right:10px;\\r\\n    font-family: Pacifico;\\r\\n    font-size: 30px;\\r\\n}\\r\\n\\r\\n.value{\\r\\n    font-family: Verdana;\\r\\n    display:inline-block;\\r\\n    border: 0.5px solid #E9E9E9;\\r\\n    background: rgb(251, 251, 251);\\r\\n    border-radius: 20px;\\r\\n    width:100%;\\r\\n    padding:10px;\\r\\n}\\r\\n\\r\\n.btns{\\r\\n    margin-bottom: 1%;\\r\\n    margin-right: 1%;\\r\\n    display: flex;\\r\\n    justify-content: flex-end;\\r\\n}\\r\\n\\r\\n.btns button{\\r\\n    margin-right: 1%;\\r\\n}\\r\\n\\r\\n.form-buffer{\\r\\n    margin-top: 5%;\\r\\n}\\r\\n\\r\\n.post{\\r\\n    background-color:white;\\r\\n    border-radius: 10px;\\r\\n    margin-bottom: 50px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.post-title{\\r\\n    text-align: center;\\r\\n    padding-top: 20px;\\r\\n}\\r\\n\\r\\n.post-image{\\r\\n    max-height:300px;\\r\\n    max-width: 100%;\\r\\n    display:block; \\r\\n    height: auto;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n}\\r\\n\\r\\n.post-info{\\r\\n    font-style: italic;\\r\\n    display: flex; \\r\\n    justify-content: flex-end;\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n.author{\\r\\n    margin-right:20px;\\r\\n}\\r\\n\\r\\n.date{\\r\\n    margin-right:20px;\\r\\n}\\r\\n\\r\\n.category button{\\r\\n    border-radius: 20px;\\r\\n    font-size: calc(.4em + .5vw);\\r\\n    margin-right:5px;\\r\\n    margin-left:5px;\\r\\n    font-family: Verdana;\\r\\n    pointer-events:none;\\r\\n}\\r\\n\\r\\n.categories{\\r\\n    margin-bottom: 1%;\\r\\n    margin-left: 8%;\\r\\n    margin-bottom:2%;\\r\\n}\\r\\n\\r\\n.bottom{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container box\\\">\\n  <div class=\\\"card\\\">\\n    <h1 class=\\\"box-header\\\">Account</h1>\\n    <hr />\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"info\\\">\\n        <h4 class=\\\"label\\\"> Username: </h4>\\n        <h5 class=\\\"username value\\\">{{ CurrentUser.username }}</h5>\\n        <hr />\\n      </div>\\n\\n      <div class=\\\"info\\\">\\n        <h4 class=\\\"label\\\"> Email: </h4>\\n        <h5 class=\\\"email value\\\">{{ CurrentUser.email }}</h5>\\n        <hr />\\n      </div>\\n\\n      <div class=\\\"info\\\">\\n        <h4 class=\\\"label\\\"> Fullname: </h4>\\n        <h5 class=\\\"fullname value\\\">{{ CurrentUser.fullname }}</h5>\\n        <hr />\\n      </div>\\n\\n      <div class=\\\"info\\\">\\n        <h4 class=\\\"label\\\"> Creation: </h4>\\n        <h5 class=\\\"created value\\\">{{ CurrentUser.created }}</h5>\\n        <hr />\\n      </div>\\n\\n      <div class=\\\"info\\\">\\n        <h4 class=\\\"label\\\"> Posts: </h4>\\n        <h5 class=\\\"posts value\\\">{{ CurrentUser.posts }}</h5>\\n        <hr />\\n      </div>\\n\\n      <div class=\\\"info\\\">\\n        <h4 class=\\\"label\\\"> Total Votes: </h4>\\n        <h5 class=\\\"votes value\\\">{{ CurrentUser.votes }}</h5>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"btns\\\">\\n      <button class=\\\"btn btn-info\\\" (click)=\\\"edit()\\\">Edit Account</button>\\n      <button class=\\\"btn btn-danger\\\" (click)=\\\"delete()\\\">Delete Account</button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container box\\\" *ngIf=\\\"posts.length > 0\\\">\\n  <div class=\\\"cd\\\">\\n    <h1 class=\\\"box-header\\\">My Posts</h1>\\n    <hr />\\n  </div>\\n\\n  <div *ngFor=\\\"let post of posts\\\">\\n      <div class=\\\"post\\\">\\n        <a href=\\\"/posts/view/{{ post._id }}\\\">\\n          <h1 class=\\\"post-title\\\">{{ post.title }}</h1>\\n        </a>\\n        <hr />\\n        <a href=\\\"/posts/view/{{ post._id }}\\\">\\n          <div class=\\\"image\\\">\\n            <img *ngIf=\\\"post.postimage != 'noimage'\\\" src=\\\"{{ post.postimage }}\\\" class=\\\"post-image\\\">\\n            <img *ngIf=\\\"post.postimage == 'noimage'\\\" src=\\\"../../../assets/noimage.png\\\" class=\\\"post-image\\\">\\n          </div>\\n        </a>\\n        <hr />\\n\\n        <div class=\\\"bottom\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"categories btn-group\\\" *ngIf=\\\"!mobile() && post.categories.length > 0\\\">\\n                <div class=\\\"category\\\" *ngFor=\\\"let category of post.categories\\\">\\n                  <!-- Software -->\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-4 col-lg-2\\\">\\n                      <button class=\\\"btn btn-primary\\\" *ngIf=\\\"category == 'cb_software'\\\"> Software </button>\\n                    </div>\\n                  </div>\\n                  <!-- Web -->\\n                  <button class=\\\"btn btn-success\\\" *ngIf=\\\"category == 'cb_web'\\\"> Web </button>\\n                  <!-- Machine Learning -->\\n                  <button class=\\\"btn btn-info\\\" *ngIf=\\\"category == 'cb_machinelearning'\\\"> Machine Learning </button>\\n                  <!-- Robotics -->\\n                  <button class=\\\"btn btn-danger\\\" *ngIf=\\\"category == 'cb_robotics'\\\"> Robotics </button>\\n                  <!-- Mobile -->\\n                  <button class=\\\"btn btn-warning\\\" *ngIf=\\\"category == 'cb_mobile'\\\"> Mobile </button>\\n                  <!-- Tech News -->\\n                  <button class=\\\"btn btn-light\\\" *ngIf=\\\"category == 'cb_technews'\\\"> Tech News </button>\\n                  <!-- Other -->\\n                  <button class=\\\"btn btn-dark\\\" *ngIf=\\\"category == 'cb_other'\\\"> Other </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col\\\">\\n            <div class=\\\"post-info\\\">\\n              <div class=\\\"author\\\">\\n                Written by: <a href=\\\"/account\\\">{{post.author}}</a>\\n              </div>\\n              <div class=\\\"date\\\">\\n                {{ post.created }}\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n</div>\"","import { Component, OnInit} from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { PostService } from '../../services/post.service';\nimport { User } from '../models/User';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n  CurrentUser : User = new User();\n  posts : any = {};\n\n  constructor(private authService : AuthService, private postService : PostService) { \n    \n    authService.isAuthenticated().subscribe(\n      data =>{\n        const response = JSON.parse(JSON.stringify(data));\n\n        if (response.authenticated){\n\n          this.CurrentUser.username = response.username;\n          this.CurrentUser.email = response.email;\n          this.CurrentUser.fullname = response.fullname;\n          this.CurrentUser.posts = response.posts;\n          this.CurrentUser.votes = response.votes;\n          this.CurrentUser.created = response.created;\n          this.CurrentUser.id = response.id;\n        }else{\n          window.location.href = \"/auth/login\";\n        }\n\n        authService.setPostCount(this.CurrentUser).subscribe(\n          data =>{\n            const response = JSON.parse(JSON.stringify(data));\n            if (response.success){\n              this.CurrentUser.posts = response.postcount;\n            }\n          }\n        );\n\n        authService.setVoteCount(this.CurrentUser).subscribe(\n          data =>{\n            const response = JSON.parse(JSON.stringify(data));\n            if (response.success){\n              this.CurrentUser.votes = response.votecount;\n            }\n          }\n        );\n        \n        postService.getPostsByUser(this.CurrentUser.username.toString()).subscribe(\n          data =>{\n            const response = JSON.parse(JSON.stringify(data));\n         \n            this.posts = response;\n          },\n          err =>{\n            console.log(err); throw err;\n          }\n        );\n\n      },\n      err =>{\n        console.log(err); throw err;\n      }\n    );\n  }\n\n  delete(){\n    if(confirm(\"Are you sure to delete your account?\")) {\n      this.authService.delete(this.CurrentUser).subscribe(\n        data =>{\n          const response = JSON.parse(JSON.stringify(data));\n          if (response.success){\n            alert(response.message);\n            window.location.href = \"/\";\n          }\n        },\n        err =>{\n          console.log(err); throw err;\n        }\n      );\n    }\n  }\n\n  edit(){\n    window.location.href = \"/account/edit\";\n  }\n\n  mobile(){\n    if (window.innerWidth <= 992) {\n      return true;\n    }\n      return false;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".box{\\r\\n    margin-top:2%;\\r\\n    margin-bottom: 5%;\\r\\n}\\r\\n\\r\\n.box-header{\\r\\n    margin-top: 2%;\\r\\n    text-align: center;\\r\\n    font-family: Pacifico;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    border-radius: 20px;\\r\\n}\\r\\n\\r\\n.text-box{\\r\\n    border-radius: 20px;\\r\\n    font-size: 20px;\\r\\n    height: 5%;\\r\\n}\\r\\n\\r\\n.label{\\r\\n    font-family: Pacifico;\\r\\n    font-size: 30px;\\r\\n}\\r\\n\\r\\n.category{\\r\\n    margin-right:5px;\\r\\n    margin-left:5px;\\r\\n    display: inline;\\r\\n}\\r\\n\\r\\n.category input{\\r\\n    margin-left:6px;\\r\\n}\\r\\n\\r\\n.submit{\\r\\n    float: right;\\r\\n}\\r\\n\\r\\n.form-buffer{\\r\\n    margin-top: 5%;\\r\\n}\\r\\n\\r\\n.validation{\\r\\n    color:red;\\r\\n}\\r\\n\\r\\n.validation hr{\\r\\n    display: block;\\r\\n    height: 1px;\\r\\n    border: 0;\\r\\n    border-top: 1px solid red;\\r\\n    margin: 1em 0;\\r\\n    padding: 0; \\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container box\\\">\\n    <div class=\\\"card\\\">\\n        <h1 class=\\\"box-header\\\">Make a Post</h1>\\n        <hr />\\n        <div class=\\\"card-body\\\">\\n            <form #postForm=\\\"ngForm\\\" enctype=\\\"multipart/form-data\\\" (ngSubmit)=\\\"addPost(postForm, $event)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <h4 class=\\\"label\\\"> Title </h4>\\n                    <hr />\\n                    <input type=\\\"text\\\" class=\\\"form-control text-box\\\" name=\\\"title\\\" id=\\\"password\\\" placeholder=\\\"Title\\\"\\n                        ngModel>\\n\\n                    <div class=\\\"validation\\\" *ngIf=\\\"titleMsg\\\">\\n                        <hr>\\n                        <p id=\\\"title-message\\\">{{ titleMsg }}</p>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group form-buffer\\\">\\n                    <h4 class=\\\"label\\\"> Body </h4>\\n                    <hr />\\n                    <ck-editor name=\\\"editor\\\" name=\\\"body\\\" skin=\\\"moono-lisa\\\" language=\\\"en\\\" [fullPage]=\\\"true\\\" ngModel></ck-editor>\\n\\n                    <div class=\\\"validation\\\" *ngIf=\\\"bodyMsg\\\">\\n                        <hr>\\n                        <p id=\\\"body-message\\\">{{ bodyMsg }}</p>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group form-buffer\\\">\\n                    <h4 class=\\\"label\\\"> Categories </h4>\\n                    <hr />\\n                    <!-- Software --->\\n                    <div class=\\\"category\\\">\\n                        <button class=\\\"btn btn-primary\\\" (click)=\\\"changeCheck('cb_software')\\\">Software</button>\\n                        <input type=\\\"checkbox\\\" name=\\\"cb_software\\\" [checked]=\\\"cb_software\\\" (change)=\\\"cb_software = !cb_software\\\">\\n                    </div>\\n\\n                    <!-- Web -->\\n                    <div class=\\\"category\\\">\\n                        <button class=\\\"btn btn-success\\\" (click)=\\\"changeCheck('cb_web')\\\"> Web </button>\\n                        <input type=\\\"checkbox\\\" name=\\\"cb_web\\\" [checked]=\\\"cb_web\\\" (change)=\\\"cb_web = !cb_web\\\">\\n                    </div>\\n\\n                    <!-- Machine Learning -->\\n                    <div class=\\\"category\\\">\\n                        <button class=\\\"btn btn-info\\\" (click)=\\\"changeCheck('cb_machinelearning')\\\"> Machine Learning\\n                        </button>\\n                        <input type=\\\"checkbox\\\" name=\\\"cb_machinelearning\\\" [checked]=\\\"cb_machinelearning\\\" (change)=\\\"cb_machinelearning = !cb_machinelearning\\\">\\n                    </div>\\n\\n                    <!-- Robotics -->\\n                    <div class=\\\"category\\\">\\n                        <button class=\\\"btn btn-danger\\\" (click)=\\\"changeCheck('cb_robotics')\\\"> Robotics </button>\\n                        <input type=\\\"checkbox\\\" name=\\\"cb_robotics\\\" [checked]=\\\"cb_robotics\\\" (change)=\\\"cb_robotics = !cb_robotics\\\">\\n                    </div>\\n\\n                    <!-- Mobile -->\\n                    <div class=\\\"category\\\">\\n                        <button class=\\\"btn btn-warning\\\" (click)=\\\"changeCheck('cb_mobile')\\\"> Mobile </button>\\n                        <input type=\\\"checkbox\\\" name=\\\"cb_mobile\\\" [checked]=\\\"cb_mobile\\\" (change)=\\\"cb_mobile = !cb_mobile\\\">\\n                    </div>\\n\\n                    <!-- Tech News -->\\n                    <div class=\\\"category\\\">\\n                        <button class=\\\"btn btn-light\\\" (click)=\\\"changeCheck('cb_technews')\\\"> Tech News </button>\\n                        <input type=\\\"checkbox\\\" name=\\\"cb_technews\\\" [checked]=\\\"cb_technews\\\" (change)=\\\"cb_technews = !cb_technews\\\">\\n                    </div>\\n\\n                    <!-- Other -->\\n                    <div class=\\\"category\\\">\\n                        <button class=\\\"btn btn-dark\\\" (click)=\\\"changeCheck('cb_other')\\\"> Other </button>\\n                        <input type=\\\"checkbox\\\" name=\\\"cb_other\\\" [checked]=\\\"cb_other\\\" (change)=\\\"cb_other = !cb_other\\\">\\n                    </div>\\n\\n                    <div class=\\\"form-group form-buffer\\\">\\n                        <h4 class=\\\"label\\\"> Cover Image </h4>\\n                        <hr />\\n                        <input type=\\\"file\\\" name=\\\"postimage\\\" accept=\\\"image/x-png,image/jpeg\\\" (change)=\\\"checkFileType(postimage); setFile($event)\\\"\\n                            #postimage ngModel>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <input type=\\\"submit\\\" class=\\\"btn btn-info submit\\\">\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit} from '@angular/core';\nimport { PostService } from '../../services/post.service';\nimport { AuthService } from '../../services/auth.service';\nimport { User } from '../models/User';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-addpost',\n  templateUrl: './addpost.component.html',\n  styleUrls: ['./addpost.component.css']\n})\nexport class AddpostComponent implements OnInit {\n  CurrentUser : User = new User()\n  postImage : any;\n\n  titleMsg : String;\n  bodyMsg : String;\n\n  cb_machinelearning : Boolean = false;\n  cb_mobile : Boolean = false;\n  cb_other : Boolean = false;\n  cb_robotics : Boolean = false;\n  cb_software : Boolean = false;\n  cb_technews : Boolean = false;\n  cb_web : Boolean = false;\n\n  constructor(private postService : PostService, private authService : AuthService) {\n    this.authService.isAuthenticated().subscribe(\n      data =>{\n        const response = JSON.parse(JSON.stringify(data));\n        if (response.authenticated == true){\n          this.CurrentUser.username  = response.username;\n          this.CurrentUser.email     = response.email;\n          this.CurrentUser.fullname  = response.fullname;\n          this.CurrentUser.created   = response.created;\n        }else{\n          window.location.replace(\"/auth/login\");\n        }\n      },\n      err =>{\n        console.log(err); throw err;\n      }\n    )\n  }\n\n  addPost(form: NgForm, event) {\n    event.preventDefault();\n\n    this.clearMessages();\n    if (this.validateInput(form.value)){\n      let fd = new FormData();\n\n      if (this.postImage){\n        fd.append('postimage',this.postImage, this.postImage.name);\n      }else{\n        fd.append('postimage','noimage');\n      }\n\n      fd.append('title', form.value.title);\n      fd.append('body', form.value.body);\n      fd.append('author', this.CurrentUser.username.toString());\n      fd.append('cb_machinelearning', this.cb_machinelearning.toString());\n      fd.append('cb_mobile', this.cb_mobile.toString());\n      fd.append('cb_other', this.cb_other.toString());\n      fd.append('cb_robotics', this.cb_robotics.toString());\n      fd.append('cb_software', this.cb_software.toString());\n      fd.append('cb_technews', this.cb_technews.toString());\n      fd.append('cb_web', this.cb_web.toString());\n\n      this.postService.addPost(fd);\n    }\n  }\n\n  validateInput(input){\n    if (input.title != undefined && input.title.length > 0){\n      if (input.title.length <= 5){\n        this.titleMsg = \"Title must be longer than 5 characters\";\n      }\n      if (input.title.length > 100){\n        this.titleMsg = \"Titles must be under 100 characters.\";\n      }\n    }else{\n      this.titleMsg = \"Please enter a title\";\n    }\n\n    if (input.body != undefined && input.body.length > 0){\n      if (input.body.length > 900000){\n        this.bodyMsg = \"Sorry! Body is too long. Please add a link for extended text.\";\n      }\n    }else{\n      this.bodyMsg = \"Please enter a body\";\n    }\n\n    if (this.bodyMsg == undefined && this.titleMsg == undefined){\n      return true;\n    }\n\n    return false;\n  }\n\n  clearMessages(){\n    this.titleMsg = undefined;\n    this.bodyMsg = undefined;\n  }\n\n  changeCheck(checkbox) {\n    switch(checkbox){\n      case \"cb_software\":\n        this.cb_software = !this.cb_software;\n        break;\n      case \"cb_machinelearning\":\n        this.cb_machinelearning = !this.cb_machinelearning;\n        break;\n      case \"cb_mobile\":\n        this.cb_mobile = !this.cb_mobile;\n        break;\n      case \"cb_other\":\n        this.cb_other = !this.cb_other;\n        break;\n      case \"cb_robotics\":\n        this.cb_robotics = !this.cb_robotics;\n        break;\n      case \"cb_technews\":\n        this.cb_technews = !this.cb_technews;\n        break;\n      case \"cb_web\":\n        this.cb_web = !this.cb_web;\n        break;\n    }\n    return false; // Prevents form for automatically sending on button click\n  }\n\n  checkFileType(image: HTMLInputElement) {\n    if (image && image.value) {\n      let value = image.value.split(\".\")[1];\n\n      if (value == \"jpeg\" || value == \"jpg\" || value == \"png\" || value == undefined) {\n        return;\n      } else {\n        alert(\"This file type is not supported.\");\n        image.value = \"\";\n      }\n    }\n  }\n\n  setFile(event){\n    this.postImage = event.target.files[0];\n  }\n\n  ngOnInit() {\n  }\n\n}","module.exports = \".search-input{\\r\\n    height:50px;\\r\\n    border-top-left-radius: 20px 50%;\\r\\n    border-bottom-left-radius: 20px 50%;\\r\\n}\\r\\n\\r\\n.btn-search{\\r\\n    border-top-right-radius: 20px 50%;\\r\\n    border-bottom-right-radius: 20px 50%;\\r\\n}\\r\\n\\r\\n.btn-sort{\\r\\n    margin-left:5px;\\r\\n    margin-right:5px;\\r\\n}\\r\\n\\r\\n.btn-categories{\\r\\n    margin-left:5px;\\r\\n    margin-right:5px;\\r\\n}\\r\\n\\r\\n.filter .dropdown-item{\\r\\n    cursor: pointer;\\r\\n    font-size: 16px;\\r\\n}\\r\\n\\r\\n.filter-btn { \\r\\n    color: #ffffff; \\r\\n    background-color: #1FD17B; \\r\\n  }\\r\\n\\r\\n.filter-btn:hover, \\r\\n  .filter-btn:focus, \\r\\n  .filter-btn:active, \\r\\n  .filter-btn.active, \\r\\n  .open .dropdown-toggle.filter-btn { \\r\\n    color: #ffffff; \\r\\n    background-color: #1FD17B; \\r\\n  }\\r\\n\\r\\n.filter-btn:active, \\r\\n  .filter-btn.active, \\r\\n  .open .dropdown-toggle.filter-btn { \\r\\n    background-image: none; \\r\\n  }\\r\\n\\r\\n.filter-btn.disabled, \\r\\n  .filter-btn[disabled], \\r\\n  fieldset[disabled] .filter-btn, \\r\\n  .filter-btn.disabled:hover, \\r\\n  .filter-btn[disabled]:hover, \\r\\n  fieldset[disabled] .filter-btn:hover, \\r\\n  .filter-btn.disabled:focus, \\r\\n  .filter-btn[disabled]:focus, \\r\\n  fieldset[disabled] .filter-btn:focus, \\r\\n  .filter-btn.disabled:active, \\r\\n  .filter-btn[disabled]:active, \\r\\n  fieldset[disabled] .filter-btn:active, \\r\\n  .filter-btn.disabled.active, \\r\\n  .filter-btn[disabled].active, \\r\\n  fieldset[disabled] .filter-btn.active { \\r\\n    background-color: #1FD17B; \\r\\n  }\\r\\n\\r\\n.filter-btn .badge { \\r\\n    color: #1FD17B; \\r\\n  }\\r\\n\\r\\n.post{\\r\\n    background-color:white;\\r\\n    border-radius: 10px;\\r\\n    margin-bottom: 50px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.post-title{\\r\\n    text-align: center;\\r\\n    padding-top: 20px;\\r\\n}\\r\\n\\r\\n.post-image{\\r\\n    max-height:300px;\\r\\n    max-width: 100%;\\r\\n    display:block; \\r\\n    height: auto;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n}\\r\\n\\r\\n.post-info{\\r\\n    font-style: italic;\\r\\n    display: flex; \\r\\n    justify-content: flex-end;\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n.author{\\r\\n    margin-right:20px;\\r\\n}\\r\\n\\r\\n.date{\\r\\n    margin-right:20px;\\r\\n}\\r\\n\\r\\n.category button{\\r\\n    border-radius: 20px;\\r\\n    font-size: calc(.4em + .5vw);\\r\\n    margin-right:5px;\\r\\n    margin-left:5px;\\r\\n    font-family: Verdana;\\r\\n    pointer-events:none;\\r\\n}\\r\\n\\r\\n.categories{\\r\\n    margin-bottom: 1%;\\r\\n    margin-left: 8%;\\r\\n    margin-bottom:2%;\\r\\n}\\r\\n\\r\\n.bottom{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n@media (max-width: 991px) {\\r\\n    .btn-group.my-btn-group-responsive > .btn {\\r\\n      display: block;\\r\\n      width: 100%;\\r\\n    }\\r\\n    \\r\\n    /* making the border-radius correct */\\r\\n    .btn-group.my-btn-group-responsive > .btn:first-child {\\r\\n      border-radius: 6px 6px 0 0;\\r\\n    }\\r\\n    .btn-group.my-btn-group-responsive > .btn:first-child:not(:last-child):not(.dropdown-toggle) {\\r\\n      border-top-right-radius: 6px;\\r\\n    }\\r\\n    .btn-group.my-btn-group-responsive > .btn:last-child:not(:first-child) {\\r\\n      border-radius: 0 0 6px 6px;\\r\\n    }\\r\\n    \\r\\n    /* fixing margin */\\r\\n    .btn-group.my-btn-group-responsive .btn + .btn {\\r\\n      margin-left: 0;\\r\\n    }\\r\\n    \\r\\n  }\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container top-buffer\\\">\\n  <div class=\\\"search\\\">\\n    <form>\\n      <div class=\\\"input-group mb-3\\\">\\n        <input type=\\\"text\\\" name = \\\"posts\\\" class=\\\"form-control  search-input\\\" placeholder=\\\"Search posts\\\" aria-describedby=\\\"basic-addon2\\\"\\n         [(ngModel)]=\\\"searchText\\\" (keydown)=\\\"checkKey($event)\\\">\\n        <div class=\\\"input-group-append\\\">\\n          <button class=\\\"btn btn-info btn-search\\\" type=\\\"button\\\" (click)=\\\"search()\\\">Search</button>\\n        </div>\\n      </div>\\n    </form>\\n\\n    <!-- Filter selection -->\\n\\n    <div class=\\\"btn-group filter\\\">\\n      <div class=\\\"dropdown\\\">\\n        <button class=\\\"btn dropdown-toggle btn-categories filter-btn\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\"\\n          aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          {{ categoryFilter }}\\n        </button>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n          <h5 class=\\\"dropdown-item\\\" (click)=\\\"setCategoryFilter('All Categories')\\\">All Categories</h5>\\n          <h5 class=\\\"dropdown-item\\\" (click)=\\\"setCategoryFilter('Software')\\\">Software</h5>\\n          <h5 class=\\\"dropdown-item\\\" (click)=\\\"setCategoryFilter('Web')\\\">Web</h5>\\n          <h5 class=\\\"dropdown-item\\\" (click)=\\\"setCategoryFilter('Machine Learning')\\\">Machine Learning</h5>\\n          <h5 class=\\\"dropdown-item\\\" (click)=\\\"setCategoryFilter('Robotics')\\\">Robotics</h5>\\n          <h5 class=\\\"dropdown-item\\\" (click)=\\\"setCategoryFilter('Mobile')\\\">Mobile</h5>\\n          <h5 class=\\\"dropdown-item\\\" (click)=\\\"setCategoryFilter('Tech News')\\\">Tech News</h5>\\n          <h5 class=\\\"dropdown-item\\\" (click)=\\\"setCategoryFilter('Other')\\\">Other</h5>\\n        </div>\\n      </div>\\n      <div class=\\\"dropdown\\\">\\n        <button class=\\\"btn dropdown-toggle btn-sort filter-btn\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\"\\n          aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          {{ sortFilter }}\\n        </button>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n          <h5 class=\\\"dropdown-item\\\" (click)=\\\"setSortFilter('Most Votes')\\\">Most Votes</h5>\\n          <h5 class=\\\"dropdown-item\\\" (click)=\\\"setSortFilter('Least Votes')\\\">Least Votes</h5>\\n          <h5 class=\\\"dropdown-item\\\" (click)=\\\"setSortFilter('Newest')\\\">Newest</h5>\\n        </div>\\n      </div>\\n    </div>\\n    <hr />\\n\\n    <!-- Display Posts -->\\n    <div class=\\\"posts top-buffer\\\" *ngIf=\\\"posts.length > 0\\\">\\n      <div *ngFor=\\\"let post of posts\\\">\\n        <div class=\\\"post\\\">\\n          <a href=\\\"/posts/view/{{ post._id }}\\\">\\n            <h1 class=\\\"post-title\\\">{{ post.title }}</h1>\\n          </a>\\n          <hr />\\n          <a href=\\\"/posts/view/{{ post._id }}\\\">\\n            <div class=\\\"image\\\">\\n              <img *ngIf=\\\"post.postimage != 'noimage'\\\" src=\\\"{{ post.postimage }}\\\" class=\\\"post-image\\\">\\n              <img *ngIf=\\\"post.postimage == 'noimage'\\\" src=\\\"../../../assets/noimage.png\\\" class=\\\"post-image\\\">\\n            </div>\\n          </a>\\n          <hr />\\n\\n          <div class=\\\"bottom\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\">\\n                <div class=\\\"categories btn-group\\\" *ngIf=\\\"!mobile() && post.categories.length > 0\\\">\\n                  <div class=\\\"category\\\" *ngFor=\\\"let category of post.categories\\\">\\n                    <!-- Software -->\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-4 col-lg-2\\\">\\n                        <button class=\\\"btn btn-primary\\\" *ngIf=\\\"category == 'cb_software'\\\"> Software </button>\\n                      </div>\\n                    </div>\\n                    <!-- Web -->\\n                    <button class=\\\"btn btn-success\\\" *ngIf=\\\"category == 'cb_web'\\\"> Web </button>\\n                    <!-- Machine Learning -->\\n                    <button class=\\\"btn btn-info\\\" *ngIf=\\\"category == 'cb_machinelearning'\\\"> Machine Learning </button>\\n                    <!-- Robotics -->\\n                    <button class=\\\"btn btn-danger\\\" *ngIf=\\\"category == 'cb_robotics'\\\"> Robotics </button>\\n                    <!-- Mobile -->\\n                    <button class=\\\"btn btn-warning\\\" *ngIf=\\\"category == 'cb_mobile'\\\"> Mobile </button>\\n                    <!-- Tech News -->\\n                    <button class=\\\"btn btn-light\\\" *ngIf=\\\"category == 'cb_technews'\\\"> Tech News </button>\\n                    <!-- Other -->\\n                    <button class=\\\"btn btn-dark\\\" *ngIf=\\\"category == 'cb_other'\\\"> Other </button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col\\\">\\n              <div class=\\\"post-info\\\">\\n                <div class=\\\"author\\\">\\n                  Written by: <a href=\\\"/account/view/{{post.author}}\\\">{{post.author}}</a>\\n                </div>\\n                <div class=\\\"date\\\">\\n                  {{ post.created }}\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit , Inject} from '@angular/core';\nimport { PostService } from '../../services/post.service';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css', '../global.css']\n})\nexport class ContentComponent implements OnInit {\n  searchText : String;\n  categoryFilter: String = \"All Categories\";\n  sortFilter: String = \"Most Votes\";\n  posts: any = {};\n\n\n  constructor(private postService: PostService) {\n    this.postService.getPosts().subscribe(\n      data => {\n        const response = JSON.parse(JSON.stringify(data));\n        this.posts = response;\n\n        this.setSortFilter(this.sortFilter);\n      },\n      err => {\n        console.log(err); throw err;\n      }\n    );\n  }\n\n  checkKey(event){\n    if (event.key == \"Enter\"){\n      this.search();\n    }\n  }\n\n  search(){\n    let filtered = [];\n\n    this.postService.getPosts().subscribe(\n      data => {\n        const response = JSON.parse(JSON.stringify(data));\n        this.posts = response;\n\n        this.posts.forEach(post =>{\n          if (post.title.includes(this.searchText)){\n            filtered.push(post);\n          }\n        });\n        this.posts = filtered;\n        this.setSortFilter(this.sortFilter);\n      },\n      err => {\n        console.log(err); throw err;\n      }\n    );\n  }\n\n  setCategoryFilter(filter) {\n    this.categoryFilter = filter;\n\n    switch (filter) {\n      case \"Software\":\n        this.sortByCategory(\"software\");\n        break;\n      case \"Web\":\n        this.sortByCategory(\"web\");\n        break;\n      case \"Machine Learning\":\n        this.sortByCategory(\"machinelearning\");\n        break;\n      case \"Robotics\":\n        this.sortByCategory(\"robotics\");\n        break;\n      case \"Mobile\":\n        this.sortByCategory(\"mobile\");\n        break;\n      case \"Tech News\":\n        this.sortByCategory(\"technews\");\n        break;\n      case \"Other\":\n        this.sortByCategory(\"other\");\n        break;\n      case \"All Categories\":\n      this.postService.getPosts().subscribe(\n        data => {\n          const response = JSON.parse(JSON.stringify(data));\n          this.posts = response;\n  \n          this.setSortFilter(this.sortFilter);\n        },\n        err => {\n          console.log(err); throw err;\n        }\n      );\n    }\n  }\n\n  sortByCategory(category) {\n    let filtered = [];\n    this.postService.getPosts().subscribe(\n      data => {\n        const response = JSON.parse(JSON.stringify(data));\n        this.posts = JSON.parse(JSON.stringify(response));\n\n        this.posts.forEach((post, index) => {\n          let containsFilter = false;\n          post.categories.forEach(cat => {\n            if (cat.includes(category)) {\n              containsFilter = true;\n            }\n          });\n\n          if (containsFilter){\n            filtered.push(this.posts[index]);\n          }\n        }); \n\n        this.posts = filtered;\n    \n        if (this.sortFilter != \"Newest\") {\n          this.setSortFilter(this.sortFilter);\n        }\n\n      },\n      err => {\n        console.log(err); throw err;\n      }\n    );\n  }\n\n  setSortFilter(filter) {\n    this.sortFilter = filter;\n\n    if (filter == \"Newest\") {\n      this.postService.getPosts().subscribe(\n        data => {\n          const response = JSON.parse(JSON.stringify(data));\n          this.posts = response;\n        },\n        err => {\n          console.log(err); throw err;\n        }\n      );\n    }\n\n    if (filter == \"Most Votes\") {\n      (this.posts.sort((a, b) => parseFloat(a.votes) - parseFloat(b.votes))).reverse();\n    }\n\n    if (filter == \"Least Votes\") {\n      this.posts.sort((a, b) => parseFloat(a.votes) - parseFloat(b.votes));\n    }\n  }\n\n  mobile() {\n    if (window.innerWidth <= 992) {\n      return true;\n    }\n    return false;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".box{\\r\\n    margin-top:2%;\\r\\n    margin-bottom: 5%;\\r\\n}\\r\\n\\r\\n.box-header{\\r\\n    margin-top: 2%;\\r\\n    text-align: center;\\r\\n    font-family: Pacifico;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    border-radius: 20px;\\r\\n}\\r\\n\\r\\n.label{\\r\\n    display:inline-block;\\r\\n    margin-right:10px;\\r\\n    font-family: Pacifico;\\r\\n    font-size: 30px;\\r\\n}\\r\\n\\r\\ninput{\\r\\n    font-family: Verdana;\\r\\n    display:inline-block;\\r\\n    border: 0.5px solid #E9E9E9;\\r\\n    background: rgb(251, 251, 251);\\r\\n    border-radius: 20px;\\r\\n    width:100%;\\r\\n    padding:10px;\\r\\n}\\r\\n\\r\\n.btns{\\r\\n    margin-bottom: 1%;\\r\\n    margin-right: 1%;\\r\\n    display: flex;\\r\\n    justify-content: flex-end;\\r\\n}\\r\\n\\r\\n.credentials{\\r\\n    color:red;\\r\\n    margin-bottom: 2%;\\r\\n}\\r\\n\\r\\n.credentials p{\\r\\n    float:left;\\r\\n}\\r\\n\\r\\n.credentials hr{\\r\\n    display: block;\\r\\n    height: 1px;\\r\\n    border: 0;\\r\\n    border-top: 1px solid red;\\r\\n    margin: 1em 0;\\r\\n    padding: 0; \\r\\n}\\r\\n\\r\\n.info{\\r\\n    margin-bottom: 2%;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container box\\\">\\n  <div class=\\\"card\\\">\\n    <h1 class=\\\"box-header\\\">Edit Account</h1>\\n    <hr />\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"info\\\">\\n        <h4 class=\\\"label\\\"> Username: </h4>\\n        <input class=\\\"username\\\" [(ngModel)]=\\\"CurrentUser.username\\\">\\n\\n        <div class=\\\"credentials\\\" id=\\\"username-credentials\\\" *ngIf=\\\"usernameMsg\\\">\\n          <hr>\\n          <p id=\\\"username-message\\\">{{ usernameMsg }}</p>\\n          <br>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"info\\\">\\n        <h4 class=\\\"label\\\"> Email: </h4>\\n        <input class=\\\"email\\\" [(ngModel)]=\\\"CurrentUser.email\\\">\\n\\n        <div class=\\\"credentials\\\" id=\\\"email-credentials\\\" *ngIf=\\\"emailMsg\\\">\\n          <hr>\\n          <p id=\\\"email-message\\\">{{ emailMsg }}</p>\\n          <br>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"info\\\">\\n        <h4 class=\\\"label\\\"> Fullname: </h4>\\n        <input class=\\\"fullname\\\" [(ngModel)]=\\\"CurrentUser.fullname\\\">\\n\\n        <div class=\\\"credentials\\\" id=\\\"fullname-credentials\\\" *ngIf=\\\"fullnameMsg\\\">\\n          <hr>\\n          <p id=\\\"fullname-message\\\">{{ fullnameMsg }}</p>\\n          <br>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"btns\\\">\\n        <button class=\\\"btn btn-info\\\" (click)=\\\"edit()\\\">Confirm Changes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit , Inject} from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { User } from '../models/User';\n\n@Component({\n  selector: 'app-editaccount',\n  templateUrl: './editaccount.component.html',\n  styleUrls: ['./editaccount.component.css']\n})\nexport class EditaccountComponent implements OnInit {\n  CurrentUser: User = new User();\n\n  usernameMsg: String;\n  fullnameMsg: String;\n  emailMsg: String;\n\n  constructor(private authService: AuthService) {\n    authService.isAuthenticated().subscribe(\n      data => {\n        const response = JSON.parse(JSON.stringify(data));\n\n        if (response.authenticated) {\n          this.CurrentUser.username = response.username;\n          this.CurrentUser.email = response.email;\n          this.CurrentUser.fullname = response.fullname;\n          this.CurrentUser.posts = response.posts;\n          this.CurrentUser.votes = response.votes;\n          this.CurrentUser.created = response.created;\n          this.CurrentUser.id = response.id;\n        } else {\n          window.location.href = \"/auth/login\";\n        }\n      },\n      err => {\n        console.log(err); throw err;\n      }\n    );\n  }\n\n  validate(inputs) {\n    // --- Username ---\n    if (inputs.username != undefined) {\n      if (inputs.username.length <= 5) {\n        this.usernameMsg = \"Usernames must be longer than 5 characters\";\n      }\n      if (inputs.username.length >= 30) {\n        this.usernameMsg = \"Usernames must be less than 30 characters\"\n      }\n    } else {\n      this.usernameMsg = \"Please enter a username\";\n    }\n\n    // --- Fullname ---\n    if (inputs.fullname != undefined) {\n      if (inputs.fullname.length < 2) {\n        this.fullnameMsg = \"Fullnames must be longer than 1 character\";\n      }\n      if (inputs.fullname.length >= 50) {\n        this.fullnameMsg = \"Fullnames must be less than 50 characters\";\n      }\n      if (inputs.fullname.match(/\\d+/g) != null) {\n        this.fullnameMsg = \"Fullnames can't contain numbers.\";\n      }\n    } else {\n      this.fullnameMsg = \"Please enter a name\";\n    }\n\n    // --- Email ---\n    if (inputs.email != undefined) {\n      if (inputs.email.length <= 5) {\n        this.emailMsg = \"Emails must be longer than 5 characters\";\n      }\n      if (inputs.email.length >= 50) {\n        this.emailMsg = \"Emails must be less than 50 characters\";\n      }\n      if (!inputs.email.includes(\"@\")) {\n        this.emailMsg = \"Please enter a valid email address.\";\n      }\n    } else {\n      this.emailMsg = \"Please enter an email\";\n    }\n\n    if (this.usernameMsg != undefined || this.emailMsg != undefined || this.fullnameMsg != undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  clearMessages() {\n    this.usernameMsg = undefined;\n    this.emailMsg = undefined;\n    this.fullnameMsg = undefined;\n  }\n\n  edit() {\n    this.clearMessages();\n    if (confirm(\"Are you sure you want to update your account?\")) {\n      if (this.validate(this.CurrentUser)) {\n        this.authService.update(this.CurrentUser).subscribe(\n          data => {\n            const response = JSON.parse(JSON.stringify(data));\n\n            if (response.success) {\n              alert(\"Account updated successfully\");\n              window.location.href = \"/\";\n            }\n          },\n          err => {\n            console.log(err); throw err;\n          }\n        )\n      }\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".box{\\r\\n    margin-top:2%;\\r\\n    margin-bottom: 5%;\\r\\n}\\r\\n\\r\\n.box-header{\\r\\n    margin-top: 2%;\\r\\n    text-align: center;\\r\\n    font-family: Pacifico;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    border-radius: 20px;\\r\\n}\\r\\n\\r\\n.text-box{\\r\\n    border-radius: 20px;\\r\\n    font-size: 20px;\\r\\n    height: 5%;\\r\\n}\\r\\n\\r\\n.label{\\r\\n    font-family: Pacifico;\\r\\n    font-size: 30px;\\r\\n}\\r\\n\\r\\n.category{\\r\\n    margin-right:5px;\\r\\n    margin-left:5px;\\r\\n    display: inline;\\r\\n}\\r\\n\\r\\n.category input{\\r\\n    margin-left:6px;\\r\\n}\\r\\n\\r\\n.submit{\\r\\n    float: right;\\r\\n}\\r\\n\\r\\n.form-buffer{\\r\\n    margin-top: 5%;\\r\\n}\\r\\n\\r\\n.validation{\\r\\n    color:red;\\r\\n}\\r\\n\\r\\n.validation hr{\\r\\n    display: block;\\r\\n    height: 1px;\\r\\n    border: 0;\\r\\n    border-top: 1px solid red;\\r\\n    margin: 1em 0;\\r\\n    padding: 0; \\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container box\\\">\\n  <div class=\\\"card\\\">\\n    <h1 class=\\\"box-header\\\">Edit Post</h1>\\n    <hr />\\n    <div class=\\\"card-body\\\">\\n      <form #postForm=\\\"ngForm\\\" enctype=\\\"multipart/form-data\\\" (ngSubmit)=\\\"updatePost(postForm, $event)\\\">\\n        <div class=\\\"form-group\\\">\\n          <h4 class=\\\"label\\\"> Title </h4>\\n          <hr />\\n          <input type=\\\"text\\\" class=\\\"form-control text-box\\\" name=\\\"title\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"titleContent\\\"\\n            ngModel>\\n\\n          <div class=\\\"validation\\\" *ngIf=\\\"titleMsg\\\">\\n            <hr>\\n            <p id=\\\"title-message\\\">{{ titleMsg }}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group form-buffer\\\">\\n          <h4 class=\\\"label\\\"> Body </h4>\\n          <hr />\\n          <ck-editor name=\\\"editor\\\" name=\\\"body\\\" skin=\\\"moono-lisa\\\" language=\\\"en\\\" [fullPage]=\\\"true\\\" [(ngModel)]=\\\"bodyContent\\\" #body ngModel></ck-editor>\\n          <div class=\\\"validation\\\" *ngIf=\\\"bodyMsg\\\">\\n            <hr>\\n            <p id=\\\"body-message\\\">{{ bodyMsg }}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group form-buffer\\\">\\n          <h4 class=\\\"label\\\"> Categories </h4>\\n          <hr />\\n          <!-- Software --->\\n          <div class=\\\"category\\\">\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"changeCheck('cb_software')\\\">Software</button>\\n            <input type=\\\"checkbox\\\" name=\\\"cb_software\\\" [checked]=\\\"cb_software\\\" (change)=\\\"cb_software = !cb_software\\\">\\n          </div>\\n\\n          <!-- Web -->\\n          <div class=\\\"category\\\">\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"changeCheck('cb_web')\\\"> Web </button>\\n            <input type=\\\"checkbox\\\" name=\\\"cb_web\\\" [checked]=\\\"cb_web\\\" (change)=\\\"cb_web = !cb_web\\\">\\n          </div>\\n\\n          <!-- Machine Learning -->\\n          <div class=\\\"category\\\">\\n            <button class=\\\"btn btn-info\\\" (click)=\\\"changeCheck('cb_machinelearning')\\\"> Machine Learning </button>\\n            <input type=\\\"checkbox\\\" name=\\\"cb_machinelearning\\\" [checked]=\\\"cb_machinelearning\\\" (change)=\\\"cb_machinelearning = !cb_machinelearning\\\">\\n          </div>\\n\\n          <!-- Robotics -->\\n          <div class=\\\"category\\\">\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"changeCheck('cb_robotics')\\\"> Robotics </button>\\n            <input type=\\\"checkbox\\\" name=\\\"cb_robotics\\\" [checked]=\\\"cb_robotics\\\" (change)=\\\"cb_robotics = !cb_robotics\\\">\\n          </div>\\n\\n          <!-- Mobile -->\\n          <div class=\\\"category\\\">\\n            <button class=\\\"btn btn-warning\\\" (click)=\\\"changeCheck('cb_mobile')\\\"> Mobile </button>\\n            <input type=\\\"checkbox\\\" name=\\\"cb_mobile\\\" [checked]=\\\"cb_mobile\\\" (change)=\\\"cb_mobile = !cb_mobile\\\">\\n          </div>\\n\\n          <!-- Tech News -->\\n          <div class=\\\"category\\\">\\n            <button class=\\\"btn btn-light\\\" (click)=\\\"changeCheck('cb_technews')\\\"> Tech News </button>\\n            <input type=\\\"checkbox\\\" name=\\\"cb_technews\\\" [checked]=\\\"cb_technews\\\" (change)=\\\"cb_technews = !cb_technews\\\">\\n          </div>\\n\\n          <!-- Other -->\\n          <div class=\\\"category\\\">\\n            <button class=\\\"btn btn-dark\\\" (click)=\\\"changeCheck('cb_other')\\\"> Other </button>\\n            <input type=\\\"checkbox\\\" name=\\\"cb_other\\\" [checked]=\\\"cb_other\\\" (change)=\\\"cb_other = !cb_other\\\">\\n          </div>\\n\\n          <div class=\\\"form-group form-buffer\\\">\\n            <h4 class=\\\"label\\\"> Update Cover Image </h4>\\n            <hr />\\n            <input type=\\\"file\\\" name=\\\"postimage\\\" accept=\\\"image/x-png,image/jpeg\\\" (change)=\\\"checkFileType(postimage); setFile($event)\\\"\\n                #postimage ngModel>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"submit\\\" class=\\\"btn btn-info submit\\\">\\n          </div>\\n          <small>Changing this will overwrite previous image.</small>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit , Inject} from '@angular/core';\nimport { PostService } from '../../services/post.service';\nimport { AuthService } from '../../services/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../models/User';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-editpost',\n  templateUrl: './editpost.component.html',\n  styleUrls: ['./editpost.component.css']\n})\nexport class EditpostComponent implements OnInit {\n  CurrentUser: User = new User()\n  id: string;\n\n  postImage: any;\n  titleContent: String;\n  bodyContent: String;\n\n  titleMsg: String;\n  bodyMsg: String;\n\n  cb_machinelearning: Boolean = false;\n  cb_mobile: Boolean = false;\n  cb_other: Boolean = false;\n  cb_robotics: Boolean = false;\n  cb_software: Boolean = false;\n  cb_technews: Boolean = false;\n  cb_web: Boolean = false;\n\n  constructor(private postService: PostService, private authService: AuthService, private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => {\n        this.id = params['id'];\n      }\n    );\n\n    this.authService.isAuthenticated().subscribe(\n      data => {\n        const response = JSON.parse(JSON.stringify(data));\n        if (response.authenticated == true) {\n          this.CurrentUser.username = response.username;\n          this.CurrentUser.email = response.email;\n          this.CurrentUser.fullname = response.fullname;\n          this.CurrentUser.created = response.created;\n        } else {\n          // window.location.replace(\"/auth/login\");\n        }\n      },\n      err => {\n        console.log(err); throw err;\n      }\n    );\n\n    this.postService.getPostById(this.id).subscribe(\n      data => {\n        const response = JSON.parse(JSON.stringify(data));\n\n        if (response.title) {\n          this.titleContent = response.title;\n        }\n        if (response.body) {\n          this.bodyContent = response.body;\n        }\n        if (response.categories) {\n          response.categories.forEach(category => {\n            this.changeCheck(category);\n          });\n        }\n      },\n      err => {\n        console.log(err); throw err;\n      }\n    );\n  }\n\n  updatePost(form: NgForm, event) {\n    event.preventDefault();\n\n    this.clearMessages();\n    if (this.validateInput(form.value)) {\n      if (confirm(\"Are you sure you want to edit this post?\")) {\n\n        let fd = new FormData();\n\n        if (this.postImage){\n          fd.append('postimage',this.postImage, this.postImage.name);\n        } else {\n          fd.append('postimage','noimage');\n        }\n\n        fd.append('id', this.id);\n        fd.append('title', form.value.title);\n        fd.append('body', form.value.body);\n        fd.append('cb_machinelearning', this.cb_machinelearning.toString());\n        fd.append('cb_mobile', this.cb_mobile.toString());\n        fd.append('cb_other', this.cb_other.toString());\n        fd.append('cb_robotics', this.cb_robotics.toString());\n        fd.append('cb_software', this.cb_software.toString());\n        fd.append('cb_technews', this.cb_technews.toString());\n        fd.append('cb_web', this.cb_web.toString());\n\n        let data = {\n          id: this.id,\n          title: form.value.title,\n          body: form.value.body,\n          cb_machinelearning: this.cb_machinelearning.toString(),\n          cb_mobile: this.cb_mobile.toString(),\n          cb_other: this.cb_other.toString(),\n          cb_robotics: this.cb_robotics.toString(),\n          cb_software: this.cb_software.toString(),\n          cb_technews: this.cb_technews.toString(),\n          cb_web: this.cb_web.toString(),\n        }\n\n        this.postService.updatePost(fd);\n      }\n    }\n  }\n\n  validateInput(input) {\n    if (input.title != undefined && input.title.length > 0) {\n      if (input.title.length <= 5) {\n        this.titleMsg = \"Title must be longer than 5 characters\";\n      }\n      if (input.title.length > 100) {\n        this.titleMsg = \"Titles must be under 100 characters.\";\n      }\n    } else {\n      this.titleMsg = \"Please enter a title\";\n    }\n\n    if (input.body != undefined && input.body.length > 0) {\n      if (input.body.length > 90000) {\n        this.bodyMsg = \"Sorry! Body is too long. Please add a link for extended text.\";\n      }\n    } else {\n      this.bodyMsg = \"Please enter a body\";\n    }\n\n    if (this.bodyMsg == undefined && this.titleMsg == undefined) {\n      return true;\n    }\n\n    return false;\n  }\n\n  clearMessages() {\n    this.titleMsg = undefined;\n    this.bodyMsg = undefined;\n  }\n\n  changeCheck(checkbox) {\n    switch (checkbox) {\n      case \"cb_software\":\n        this.cb_software = !this.cb_software;\n        break;\n      case \"cb_machinelearning\":\n        this.cb_machinelearning = !this.cb_machinelearning;\n        break;\n      case \"cb_mobile\":\n        this.cb_mobile = !this.cb_mobile;\n        break;\n      case \"cb_other\":\n        this.cb_other = !this.cb_other;\n        break;\n      case \"cb_robotics\":\n        this.cb_robotics = !this.cb_robotics;\n        break;\n      case \"cb_technews\":\n        this.cb_technews = !this.cb_technews;\n        break;\n      case \"cb_web\":\n        this.cb_web = !this.cb_web;\n        break;\n    }\n    return false; // Prevents form for automatically sending on button click\n  }\n\n  checkFileType(image: HTMLInputElement) {\n    if (image && image.value) {\n      let value = image.value.split(\".\")[1];\n\n      if (value == \"jpeg\" || value == \"jpg\" || value == \"png\" || value == undefined) {\n        return;\n      } else {\n        alert(\"This file type is not supported.\");\n        image.value = \"\";\n      }\n    }\n  }\n\n  setFile(event) {\n    this.postImage = event.target.files[0];\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \".top-buffer{\\r\\n    margin-top:2%;\\r\\n}\"","module.exports = \".holder{\\r\\n    min-width: 100%;\\r\\n    min-height: 100%;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    background-image: linear-gradient(to right top, #506490, #42739d, #3182a6, #2491aa, #2a9faa);\\r\\n    background-position: center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    top:0px; bottom: 0px;\\r\\n    height: 100%;\\r\\n    background-repeat: repeat;\\r\\n    position: absolute;\\r\\n    overflow-x: hidden;\\r\\n}\\r\\n.box{\\r\\n    position: absolute;\\r\\n    margin: auto;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    width: 60%;\\r\\n    height: 95%;\\r\\n}\\r\\n.header{\\r\\n    font-size:calc(100% + 2vw);\\r\\n}\\r\\n.content{\\r\\n    padding:10px;\\r\\n    background-color: white;\\r\\n    border-radius: 10px;\\r\\n    text-align: center;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n.credentials{\\r\\n    color:red;\\r\\n}\\r\\n.credentials p{\\r\\n    float:left;\\r\\n}\\r\\n.credentials hr{\\r\\n    display: block;\\r\\n    height: 1px;\\r\\n    border: 0;\\r\\n    border-top: 1px solid red;\\r\\n    margin: 1em 0;\\r\\n    padding: 0; \\r\\n}\\r\\n.content h1{\\r\\n    margin: auto 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    text-align: center;\\r\\n}\\r\\n.profile-img{\\r\\n    height: 10em;\\r\\n    width:  10em;\\r\\n    border-radius: 100%;\\r\\n    margin-top:30px;\\r\\n}\\r\\n.user-form{\\r\\n    margin-top:100px;\\r\\n    width:80%;\\r\\n    justify-content: center;\\r\\n    align-content: center;\\r\\n    -ms-grid-row-align: center;\\r\\n        align-self: center;\\r\\n    align-items: center;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n}\\r\\n.user-form input{\\r\\n    width:100%;\\r\\n    height:50px;\\r\\n    border-radius:20px;\\r\\n}\\r\\n.submit-btn{\\r\\n    border:none !important;\\r\\n    background-color:#36C23B;\\r\\n    color:white;\\r\\n    cursor: pointer;\\r\\n    transition: 0.5s;\\r\\n}\\r\\n.submit-btn:hover{\\r\\n    background-color: #3e8e41;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"holder\\\">\\n    <div class=\\\"box\\\">\\n      <div class=\\\"content top-buffer\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm\\\">\\n                &nbsp;\\n            </div>\\n            <div class=\\\"col-sm\\\">\\n              <h1 class=\\\"header\\\">Login</h1>\\n            </div>\\n            <div class=\\\"col-sm\\\">\\n              &nbsp;\\n            </div>\\n          </div>\\n        </div>\\n        <hr>\\n        <img src=\\\"../../../assets/default-user-image.png\\\" class=\\\"profile-img\\\">\\n        <div class=\\\"user-form\\\">\\n          <form (submit)=\\\"login($event)\\\">\\n\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" [(ngModel)] = \\\"loginUser.email\\\">\\n            <div class=\\\"credentials\\\" id=\\\"email-credentials\\\" *ngIf=\\\"emailMsg\\\">\\n              <hr>\\n              <p id=\\\"email-message\\\">{{ emailMsg }}</p>\\n            </div>\\n            <br>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)] = \\\"loginUser.password\\\" >\\n            <div class=\\\"credentials\\\" id=\\\"password-credentials\\\" *ngIf=\\\"passwordMsg\\\">\\n              <hr>\\n              <p id=\\\"password-message\\\">{{ passwordMsg }}</p>\\n            </div>\\n            <br>\\n            <input class=\\\"submit-btn\\\" type=\\\"submit\\\">\\n            <a class=\\\"registration\\\" routerLink=\\\"../register\\\">Register</a> | <a class=\\\"registration\\\" routerLink=\\\"/\\\">Home</a>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit , Inject} from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { User } from '../models/User';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginUser : User = new User()\n  emailMsg : String\n  passwordMsg : String\n\n  constructor(private authService : AuthService) { }\n\n  login(event){\n    event.preventDefault();\n    this.clearMessages();\n    \n    if (this.checkInput()){\n      this.authService.login(this.loginUser).subscribe(\n        data =>{\n          const response = JSON.parse(JSON.stringify(data));\n\n          if (response.success == true){\n            window.location.replace(\"/\");\n          }\n          else{\n            this.passwordMsg = response.message;\n          }\n        },\n        err =>{\n          console.log(err); throw err;\n        }\n      )\n    }\n  }\n\n  clearMessages(){\n    this.emailMsg = undefined;\n    this.passwordMsg = undefined;\n  }\n\n  checkInput(){\n    \n    // Email\n    if (this.loginUser.email == undefined || this.loginUser.email.length == 0){\n      this.emailMsg = \"An email address is required\";\n    }\n\n    // Password\n    if (this.loginUser.password == undefined || this.loginUser.password.length == 0){\n       this.passwordMsg = \"A password is required\";\n    }\n\n    if (this.emailMsg == undefined && this.passwordMsg == undefined){\n      return true;\n    } \n    else{\n      return false;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class User{\r\n    username:String\r\n    fullname:String\r\n    email:String\r\n    created:String\r\n    posts:Number\r\n    votes:Number\r\n    id:String\r\n    password:String\r\n    passwordResubmit:String\r\n}","module.exports = \".btnAuth{\\r\\n    margin:5px;\\r\\n}\\r\\n\\r\\n.logo{\\r\\n    font-family: Pacifico;\\r\\n    font-size: 25px;\\r\\n    cursor: default;\\r\\n    color:white !important;\\r\\n}\\r\\n\\r\\n.nav-content ul a{\\r\\n    font-family: Pacifico;\\r\\n}\\r\\n\\r\\n.nav-content ul a:hover{\\r\\n    border-bottom: 2px solid turquoise;\\r\\n}\\r\\n\\r\\n.username{\\r\\n    color:white;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand logo\\\" >TechFeed</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse nav-content\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"/\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"/about\\\">About</a>\\n      </li>\\n    </ul>\\n    <li class=\\\"form-inline my-2 my-lg-0\\\">\\n     <div *ngIf=\\\"Authenticated\\\">\\n          <a href=\\\"/account\\\" class=\\\"username\\\"><button class=\\\"btn btn-primary my-2 my-sm-0 btnAuth\\\">{{CurrentUser.username}}</button></a>\\n          <a href=\\\"/posts/add\\\"> <button class=\\\"btn btn-danger my-2 my-sm-0 btnAuth\\\">Make a Post</button> </a>\\n          <a href=\\\"api/auth/logout\\\"> <button class=\\\"btn btn-info my-2 my-sm-0 btnAuth\\\">Logout</button> </a>\\n      </div>\\n      <div *ngIf=\\\"!Authenticated\\\">\\n        <a href=\\\"/auth/login\\\"><button class=\\\"btn btn-info my-2 my-sm-0 btnAuth\\\" type=\\\"submit\\\">Login</button></a>\\n        <a href=\\\"/auth/register\\\"><button class=\\\"btn btn-danger my-2 my-sm-0 btnAuth\\\" type=\\\"submit\\\">Register</button></a>\\n      </div>\\n    </li>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { User } from '../models/User';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  Authenticated : Boolean = false\n  CurrentUser : User = new User()\n\n  constructor(private authService : AuthService) {\n    this.authService.isAuthenticated().subscribe(\n      data =>{\n        const response = JSON.parse(JSON.stringify(data));\n        if (response.authenticated == true){\n          this.Authenticated = true;\n          this.CurrentUser.username  = response.username;\n          this.CurrentUser.email     = response.email;\n          this.CurrentUser.fullname  = response.fullname;\n          this.CurrentUser.created   = response.created;\n        }\n      },\n      err =>{\n        console.log(err); throw err;\n      }\n    )\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".holder{\\r\\n    min-width: 100%;\\r\\n    min-height: 100%;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    background-image: linear-gradient(to right top, #506490, #42739d, #3182a6, #2491aa, #2a9faa);\\r\\n    background-position: center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    top:0px; bottom: 0px;\\r\\n    height: 100%;\\r\\n    background-repeat: repeat;\\r\\n    position: absolute;\\r\\n    overflow-x: hidden;\\r\\n}\\r\\n.box{\\r\\n    position: absolute;\\r\\n    margin: auto;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    width: 60%;\\r\\n    height: 95%;\\r\\n}\\r\\n.header{\\r\\n    font-size:calc(100% + 2vw);\\r\\n}\\r\\n.content{\\r\\n    padding:10px;\\r\\n    background-color: white;\\r\\n    border-radius: 10px;\\r\\n    text-align: center;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n.credentials{\\r\\n    color:red;\\r\\n}\\r\\n.credentials p{\\r\\n    float:left;\\r\\n}\\r\\n.credentials hr{\\r\\n    display: block;\\r\\n    height: 1px;\\r\\n    border: 0;\\r\\n    border-top: 1px solid red;\\r\\n    margin: 1em 0;\\r\\n    padding: 0; \\r\\n}\\r\\n.content h1{\\r\\n    margin: auto 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    text-align: center;\\r\\n}\\r\\n.profile-img{\\r\\n    height: 10em;\\r\\n    width:  10em;\\r\\n    border-radius: 100%;\\r\\n    margin-top:30px;\\r\\n}\\r\\n.user-form{\\r\\n    margin-top:100px;\\r\\n    width:80%;\\r\\n    justify-content: center;\\r\\n    align-content: center;\\r\\n    -ms-grid-row-align: center;\\r\\n        align-self: center;\\r\\n    align-items: center;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n}\\r\\n.user-form input{\\r\\n    width:100%;\\r\\n    height:50px;\\r\\n    border-radius:20px;\\r\\n}\\r\\n.submit-btn{\\r\\n    border:none !important;\\r\\n    background-color:#36C23B;\\r\\n    color:white;\\r\\n    cursor: pointer;\\r\\n    transition: 0.5s;\\r\\n}\\r\\n.submit-btn:hover{\\r\\n    background-color: #3e8e41;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"holder\\\">\\n  <div class=\\\"box\\\">\\n    <div class=\\\"content top-buffer\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm\\\">\\n              &nbsp;\\n          </div>\\n          <div class=\\\"col-sm\\\">\\n            <h1 class=\\\"header\\\">Registration</h1>\\n          </div>\\n          <div class=\\\"col-sm\\\">\\n            &nbsp;\\n          </div>\\n        </div>\\n      </div>\\n      <hr>\\n      <img src=\\\"../../../assets/default-user-image.png\\\" class=\\\"profile-img\\\">\\n      <div class=\\\"user-form\\\">\\n        <form (submit)=\\\"register($event)\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"newUser.username\\\">\\n          <div class=\\\"credentials\\\" id=\\\"username-credentials\\\" *ngIf=\\\"usernameMsg\\\">\\n            <hr>\\n            <p id=\\\"username-message\\\">{{ usernameMsg }}</p>\\n          </div>\\n          <br>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"newUser.email\\\">\\n          <div class=\\\"credentials\\\" id=\\\"email-credentials\\\" *ngIf=\\\"emailMsg\\\">\\n            <hr>\\n            <p id=\\\"email-message\\\">{{ emailMsg }}</p>\\n          </div>\\n          <br>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"fullname\\\" placeholder=\\\"Fullname\\\" [(ngModel)]=\\\"newUser.fullname\\\">\\n          <div class=\\\"credentials\\\" id=\\\"fullname-credentials\\\" *ngIf=\\\"fullnameMsg\\\">\\n            <hr>\\n            <p id=\\\"fullname-message\\\">{{ fullnameMsg }}</p>\\n          </div>\\n          <br>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"newUser.password\\\">\\n          <div class=\\\"credentials\\\" id=\\\"password-credentials\\\" *ngIf=\\\"passwordMsg\\\">\\n            <hr>\\n            <p id=\\\"password-message\\\">{{ passwordMsg }}</p>\\n          </div>\\n          <br>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password_resubmit\\\" placeholder=\\\"Retype password\\\" [(ngModel)]=\\\"newUser.passwordResubmit\\\">\\n          <div class=\\\"credentials\\\" id=\\\"password_resubmit-credentials\\\" *ngIf=\\\"passwordResubmitMsg\\\">\\n            <hr>\\n            <p id=\\\"password_resubmit-message\\\">{{ passwordResubmitMsg }}</p>\\n          </div>\\n          <br>\\n          <input class=\\\"submit-btn\\\" type=\\\"submit\\\">\\n          <a class=\\\"registration\\\" routerLink=\\\"../login\\\">Login</a> | <a class=\\\"registration\\\" routerLink=\\\"/\\\">Home</a>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit , Inject} from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { User } from '../models/User';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  newUser : User = new User()\n  usernameMsg : String\n  fullnameMsg : String\n  emailMsg    : String\n  passwordMsg : String\n  passwordResubmitMsg: String\n\n  constructor(private authService: AuthService) { }\n\n  register(event){\n    event.preventDefault();\n    this.clearMessages();\n    \n    if (this.validateInputs()){\n      this.authService.isUnique(this.newUser).subscribe(\n        data=>{\n          const message = JSON.parse(JSON.stringify(data)); // Easy way to convert to JSON\n          \n          if (message.success){\n            this.authService.register(this.newUser).subscribe(\n              data =>{\n                window.location.replace(\"/auth/login\");\n              },\n              err =>{\n                console.log(err); throw err;\n              }\n            )\n          }\n          else{\n            if (message.matches == \"username\"){\n              this.usernameMsg = \"This username is already in use\";\n            }\n            if (message.matches == \"email\"){\n              this.emailMsg = \"This email is already in use\";\n            }\n          }\n        },\n        err=>{\n          console.log(err); throw err;\n        }\n      );\n    }\n  }\n\n  clearMessages(){\n    this.usernameMsg         = undefined;\n    this.fullnameMsg         = undefined;\n    this.emailMsg            = undefined;\n    this.passwordMsg         = undefined;\n    this.passwordResubmitMsg = undefined;\n  }\n\n  validateInputs(){\n    // --- Username ---\n    if (this.newUser.username != undefined){\n      if (this.newUser.username.length <= 5){\n        this.usernameMsg = \"Usernames must be longer than 5 characters\";\n      }\n      if (this.newUser.username.length >= 30){\n        this.usernameMsg = \"Usernames must be less than 30 characters\"\n      }\n    }else{\n      this.usernameMsg = \"Please enter a username\";\n    }\n\n    // --- Fullname ---\n    if (this.newUser.fullname != undefined){\n      if (this.newUser.fullname.length < 2){\n        this.fullnameMsg = \"Fullnames must be longer than 1 character\";\n      }\n      if (this.newUser.fullname.length >= 50){\n        this.fullnameMsg = \"Fullnames must be less than 50 characters\";\n      }\n      if (this.newUser.fullname.match(/\\d+/g) != null){\n        this.fullnameMsg = \"Fullnames can't contain numbers.\";\n      }\n   }else{\n    this.fullnameMsg = \"Please enter a name\";\n  }\n\n    // --- Email ---\n    if (this.newUser.email != undefined){\n      if (this.newUser.email.length <= 5){\n        this.emailMsg = \"Emails must be longer than 5 characters\";\n      }\n      if (this.newUser.email.length >= 50){\n        this.emailMsg = \"Emails must be less than 50 characters\";\n      }\n      if (!this.newUser.email.includes(\"@\")){\n        this.emailMsg = \"Please enter a valid email address.\";\n      }\n   }else{\n    this.emailMsg = \"Please enter an email\";\n  }\n\n    // --- Password ---\n    if (this.newUser.password != undefined){\n      if (this.newUser.password.length <= 5){\n        this.passwordMsg = \"Password must be longer than 5 characters\";\n      }\n      if (this.newUser.password.length >= 50){\n        this.passwordMsg = \"Password must be less than 50 characters\";\n      }\n      if (this.newUser.password.match(/\\d+/g) == null){\n        this.passwordMsg = \"Password must contain at least one number.\";\n      }\n      if (this.newUser.password.match(/[a-z]/i) == null){\n        this.passwordMsg = \"Password must contain at least one alphabetical letter.\";\n      }\n    }else{\n      this.passwordMsg = \"Please enter a password\";\n    }\n\n    // --- Password Resubmit ---\n    if (this.newUser.passwordResubmit != undefined){\n      if (this.newUser.passwordResubmit != this.newUser.password){\n        this.passwordResubmitMsg = \"Passwords do not match\";\n      }\n    }else{\n      this.passwordResubmitMsg = \"Please resubmit the password\";\n    }\n\n    if (this.usernameMsg == undefined && this.fullnameMsg == undefined && this.emailMsg == undefined && this.passwordMsg == undefined && this.passwordResubmitMsg == undefined){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".box{\\r\\n    margin-top:2%;\\r\\n    margin-bottom: 5%;\\r\\n}\\r\\n\\r\\n.box-header{\\r\\n    margin-top: 2%;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.post-header{\\r\\n    text-align: center;\\r\\n    font-family: Pacifico;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    border-radius: 20px;\\r\\n}\\r\\n\\r\\n.text-box{\\r\\n    border-radius: 20px;\\r\\n    font-size: 20px;\\r\\n    height: 5%;\\r\\n}\\r\\n\\r\\n.label{\\r\\n    display:inline-block;\\r\\n    margin-right:10px;\\r\\n    font-family: Pacifico;\\r\\n    font-size: 30px;\\r\\n}\\r\\n\\r\\n.value{\\r\\n    font-family: Verdana;\\r\\n    display:inline-block;\\r\\n    border: 0.5px solid #E9E9E9;\\r\\n    background: rgb(251, 251, 251);\\r\\n    border-radius: 20px;\\r\\n    width:100%;\\r\\n    padding:10px;\\r\\n}\\r\\n\\r\\n.btns{\\r\\n    margin-bottom: 1%;\\r\\n    margin-right: 1%;\\r\\n    display: flex;\\r\\n    justify-content: flex-end;\\r\\n}\\r\\n\\r\\n.btns button{\\r\\n    margin-right: 1%;\\r\\n}\\r\\n\\r\\n.form-buffer{\\r\\n    margin-top: 5%;\\r\\n}\\r\\n\\r\\n.post{\\r\\n    background-color:white;\\r\\n    border-radius: 10px;\\r\\n    margin-bottom: 50px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.post-title{\\r\\n    text-align: center;\\r\\n    padding-top: 20px;\\r\\n}\\r\\n\\r\\n.post-image{\\r\\n    max-height:300px;\\r\\n    max-width: 100%;\\r\\n    display:block; \\r\\n    height: auto;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n}\\r\\n\\r\\n.post-info{\\r\\n    font-style: italic;\\r\\n    display: flex; \\r\\n    justify-content: flex-end;\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n.author{\\r\\n    margin-right:20px;\\r\\n}\\r\\n\\r\\n.date{\\r\\n    margin-right:20px;\\r\\n}\\r\\n\\r\\n.category button{\\r\\n    border-radius: 20px;\\r\\n    font-size: calc(.4em + .5vw);\\r\\n    margin-right:5px;\\r\\n    margin-left:5px;\\r\\n    font-family: Verdana;\\r\\n    pointer-events:none;\\r\\n}\\r\\n\\r\\n.categories{\\r\\n    margin-bottom: 1%;\\r\\n    margin-left: 8%;\\r\\n    margin-bottom:2%;\\r\\n}\\r\\n\\r\\n.bottom{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container box\\\" *ngIf=\\\"User.username\\\">\\n  <div class=\\\"card\\\">\\n    <h1 class=\\\"box-header\\\">{{ User.username }}</h1>\\n    <hr />\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"info\\\">\\n        <h4 class=\\\"label\\\"> Username: </h4>\\n        <h5 class=\\\"username value\\\">{{ User.username }}</h5>\\n        <hr />\\n      </div>\\n\\n      <div class=\\\"info\\\">\\n        <h4 class=\\\"label\\\"> Email: </h4>\\n        <h5 class=\\\"email value\\\">{{ User.email }}</h5>\\n        <hr />\\n      </div>\\n\\n      <div class=\\\"info\\\">\\n        <h4 class=\\\"label\\\"> Fullname: </h4>\\n        <h5 class=\\\"fullname value\\\">{{ User.fullname }}</h5>\\n        <hr />\\n      </div>\\n\\n      <div class=\\\"info\\\">\\n        <h4 class=\\\"label\\\"> Creation: </h4>\\n        <h5 class=\\\"created value\\\">{{ User.created }}</h5>\\n        <hr />\\n      </div>\\n\\n      <div class=\\\"info\\\">\\n        <h4 class=\\\"label\\\"> Posts: </h4>\\n        <h5 class=\\\"posts value\\\">{{ User.posts }}</h5>\\n        <hr />\\n      </div>\\n\\n      <div class=\\\"info\\\">\\n        <h4 class=\\\"label\\\"> Total Votes: </h4>\\n        <h5 class=\\\"votes value\\\">{{ User.votes }}</h5>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container box\\\" *ngIf=\\\"posts.length > 0\\\">\\n  <div class=\\\"cd\\\">\\n    <h1 class=\\\"post-header\\\">Posts</h1>\\n    <hr />\\n  </div>\\n\\n  <div *ngFor=\\\"let post of posts\\\">\\n      <div class=\\\"post\\\">\\n        <a href=\\\"/posts/view/{{ post._id }}\\\">\\n          <h1 class=\\\"post-title\\\">{{ post.title }}</h1>\\n        </a>\\n        <hr />\\n        <a href=\\\"/posts/view/{{ post._id }}\\\">\\n          <div class=\\\"image\\\">\\n            <img *ngIf=\\\"post.postimage != 'noimage'\\\" src=\\\"{{ post.postimage }}\\\" class=\\\"post-image\\\">\\n            <img *ngIf=\\\"post.postimage == 'noimage'\\\" src=\\\"../../../assets/noimage.png\\\" class=\\\"post-image\\\">\\n          </div>\\n        </a>\\n        <hr />\\n\\n        <div class=\\\"bottom\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"categories btn-group\\\" *ngIf=\\\"!mobile() && post.categories.length > 0\\\">\\n                <div class=\\\"category\\\" *ngFor=\\\"let category of post.categories\\\">\\n                  <!-- Software -->\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-4 col-lg-2\\\">\\n                      <button class=\\\"btn btn-primary\\\" *ngIf=\\\"category == 'cb_software'\\\"> Software </button>\\n                    </div>\\n                  </div>\\n                  <!-- Web -->\\n                  <button class=\\\"btn btn-success\\\" *ngIf=\\\"category == 'cb_web'\\\"> Web </button>\\n                  <!-- Machine Learning -->\\n                  <button class=\\\"btn btn-info\\\" *ngIf=\\\"category == 'cb_machinelearning'\\\"> Machine Learning </button>\\n                  <!-- Robotics -->\\n                  <button class=\\\"btn btn-danger\\\" *ngIf=\\\"category == 'cb_robotics'\\\"> Robotics </button>\\n                  <!-- Mobile -->\\n                  <button class=\\\"btn btn-warning\\\" *ngIf=\\\"category == 'cb_mobile'\\\"> Mobile </button>\\n                  <!-- Tech News -->\\n                  <button class=\\\"btn btn-light\\\" *ngIf=\\\"category == 'cb_technews'\\\"> Tech News </button>\\n                  <!-- Other -->\\n                  <button class=\\\"btn btn-dark\\\" *ngIf=\\\"category == 'cb_other'\\\"> Other </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col\\\">\\n            <div class=\\\"post-info\\\">\\n              <div class=\\\"author\\\">\\n                Written by: <a href=\\\"/account/view/{{post.author}}\\\">{{post.author}}</a>\\n              </div>\\n              <div class=\\\"date\\\">\\n                {{ post.created }}\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n</div>\"","import { Component, OnInit , Inject} from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { PostService } from '../../services/post.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../models/User';\n\n@Component({\n  selector: 'app-viewaccount',\n  templateUrl: './viewaccount.component.html',\n  styleUrls: ['./viewaccount.component.css']\n})\nexport class ViewaccountComponent implements OnInit {\n  username : string;\n  User : User = new User();\n  posts : any = {};\n\n  constructor(private postService: PostService, private authService: AuthService, private route: ActivatedRoute) { \n    this.route.params.subscribe(\n      params => {\n        this.username = params['username'];\n      }\n    );\n\n    this.authService.getByUsername(this.username).subscribe(\n      data =>{\n        const response = JSON.parse(JSON.stringify(data));\n        \n        if (response){\n          this.User.username = response.username;\n          this.User.email = response.email;\n          this.User.fullname = response.fullname;\n          this.User.posts = response.posts;\n          this.User.votes = response.votes;\n          this.User.created = response.created;\n          this.User.id = response._id;\n\n          postService.getPostsByUser(this.User.username.toString()).subscribe(\n            data =>{\n              const response = JSON.parse(JSON.stringify(data));\n           \n              this.posts = response;\n            },\n            err =>{\n              console.log(err); throw err;\n            }\n          );\n        }else{\n          window.location.href = \"/\";\n        }\n      },\n      err =>{\n        console.log(err); throw err;\n      }\n    );\n  }\n\n  mobile(){\n    if (window.innerWidth <= 992) {\n      return true;\n    }\n      return false;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".box{\\r\\n    height: 100%;\\r\\n    background-color: white;\\r\\n    border-radius: 20px;\\r\\n    margin-top:5%;\\r\\n    margin-bottom:5%;\\r\\n}\\r\\n\\r\\n.title{\\r\\n    text-align: center;\\r\\n    padding-top: 20px;\\r\\n}\\r\\n\\r\\n.post-info{\\r\\n    padding:1%;\\r\\n}\\r\\n\\r\\n.date{\\r\\n    margin-right:1%;\\r\\n}\\r\\n\\r\\n.author{\\r\\n    margin-right:2%;\\r\\n}\\r\\n\\r\\n.voting{\\r\\n    display: flex;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.voting div{\\r\\n    display: flex;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.voting i{\\r\\n    width:20px;\\r\\n    height:20px;\\r\\n    margin-top:5px;\\r\\n    color:rgb(200,200,200);\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.voting .upvoted{\\r\\n    color:rgb(238, 78, 94);\\r\\n}\\r\\n\\r\\n.voting .downvoted{\\r\\n    color:#49cee2;\\r\\n}\\r\\n\\r\\n.voting .upvote:hover{\\r\\n    color:rgb(238, 78, 94);\\r\\n}\\r\\n\\r\\n.voting .downvote:hover{\\r\\n    color:#49cee2;\\r\\n}\\r\\n\\r\\n.votecount{\\r\\n    padding-left:5px;\\r\\n    padding-right:5px;\\r\\n}\\r\\n\\r\\n.post-btns{\\r\\n    margin-right:2%;\\r\\n    margin-left:2%;\\r\\n}\\r\\n\\r\\n.info-end{\\r\\n    display: flex;\\r\\n    justify-content: flex-end;\\r\\n    font-style: italic;\\r\\n}\\r\\n\\r\\n.body{\\r\\n    padding:1%;\\r\\n    word-wrap: break-word;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <div class=\\\"box\\\">\\n    <div [innerHTML]=\\\"body\\\" class=\\\"body\\\"> </div>\\n    <div class=\\\"footer\\\">\\n      <hr />\\n      <div class=\\\"post-info row\\\">\\n        <div class=\\\"voting col\\\">\\n\\n          <div *ngIf=\\\"!upvoted && !downvoted\\\">\\n            <i class=\\\"fas fa-arrow-up fa-lg upvote\\\" (click)=\\\"upvote()\\\"></i>\\n            <h5 class=\\\"votecount\\\">{{ formatVotes() }}</h5>\\n            <i class=\\\"fas fa-arrow-down fa-lg downvote\\\" (click)=\\\"downvote()\\\"></i>\\n          </div>\\n\\n          <div *ngIf=\\\"downvoted\\\">\\n            <i class=\\\"fas fa-arrow-up fa-lg upvote\\\" (click)=\\\"upvote()\\\"></i>\\n            <h5 class=\\\"votecount\\\">{{ formatVotes() }}</h5>\\n            <i class=\\\"fas fa-arrow-down fa-lg downvoted\\\" (click)=\\\"downvote()\\\"></i>\\n          </div>\\n\\n          <div *ngIf=\\\"upvoted\\\">\\n            <i class=\\\"fas fa-arrow-up f062 fa-lg upvoted\\\" (click)=\\\"upvote()\\\"></i>\\n            <h5 class=\\\"votecount\\\">{{ formatVotes() }}</h5>\\n            <i class=\\\"fas fa-arrow-down fa-lg downvote\\\" (click)=\\\"downvote()\\\"></i>\\n          </div>\\n\\n        </div>\\n        <div class=\\\"info-end col\\\">\\n          <div class=\\\"author\\\">\\n            Written by: <a href=\\\"/account/view/{{author}}\\\">{{ author }}</a>\\n          </div>\\n          <div class=\\\"date\\\">\\n            {{ created }}\\n          </div>\\n          <div class=\\\"post-btns\\\" *ngIf=\\\"CurrentUser.username == author\\\">\\n            <button class=\\\"btn btn-info\\\" (click)=\\\"edit()\\\">Edit</button>&nbsp;\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"delete()\\\">Delete</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit} from '@angular/core';\nimport { PostService } from '../../services/post.service';\nimport { AuthService } from '../../services/auth.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { User } from '../models/User';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-viewpost',\n  templateUrl: './viewpost.component.html',\n  styleUrls: ['./viewpost.component.css']\n})\nexport class ViewpostComponent implements OnInit {\n  CurrentUser: User = new User();\n  authenticated: boolean;\n\n  title: string;\n  body: any;\n  author: string;\n  created: string;\n  id: string;\n  voters: any;\n  votes: number;\n\n  upvoted: boolean;\n  downvoted: boolean;\n\n  constructor(private postService: PostService, private authService: AuthService, private route: ActivatedRoute, private sanitizer: DomSanitizer) {\n    this.route.params.subscribe(\n      params => {\n        this.id = params['id'];\n      }\n    );\n\n    postService.getPostById(this.id).subscribe(\n      data => {\n        const response = JSON.parse(JSON.stringify(data));\n        this.title = response.title;\n        this.body = sanitizer.bypassSecurityTrustHtml(response.body);\n        this.author = response.author;\n        this.votes = response.votes;\n        this.voters = response.voters;\n\n        // Convert GMT time to dd-mm-yy\n        let year = response.created.split(\"T\")[0].split(\"-\")[2];\n        let month = response.created.split(\"T\")[0].split(\"-\")[1];\n        let day = response.created.split(\"T\")[0].split(\"-\")[0];\n        this.created = year + \"-\" + month + \"-\" + day;\n\n        authService.isAuthenticated().subscribe(\n          data => {\n            const userData = JSON.parse(JSON.stringify(data));\n\n            if (userData.authenticated) {\n              this.authenticated = true;\n            }\n\n            if (userData.username) {\n              this.CurrentUser.username = userData.username;\n            }\n            this.setVote();\n          },\n          err => {\n            console.log(err); throw err;\n          }\n        )\n      },\n      err => {\n        console.log(err); throw err;\n      }\n    );\n  }\n\n  delete() {\n    if (this.CurrentUser.username == this.author) {\n      if (confirm(\"Are you sure you want to delete this post?\")) {\n        this.postService.deletePost(this.id).subscribe(\n          data => {\n            const response = JSON.parse(JSON.stringify(data));\n            if (response.success) {\n              alert(\"Post Deleted Successfully\");\n              window.location.href = \"/\";\n            }\n          }\n        );\n      }\n    } else {\n      alert(\"You do not own this post!\");\n    }\n  }\n\n  edit() {\n    if (this.CurrentUser.username == this.author) {\n      this.postService.editPost(this.id);\n    } else {\n      alert(\"You do not own this post!\");\n    }\n  }\n\n  formatVotes() {\n    if (this.votes >= 1000 && this.votes <= 9999) {\n      let thousandDisplayVote = (this.votes / 100).toString();\n      let each = thousandDisplayVote.split(\"\"); //Seperate the numbers into seperate characters\n      thousandDisplayVote = each[0] + \".\" + each[1] + \"k\";\n      return thousandDisplayVote;\n\n    } else if (this.votes >= 10000 && this.votes <= 99999) {\n      let thousandDisplayVote = (this.votes / 100).toString();\n      let each = thousandDisplayVote.split(\"\"); //Seperate the numbers into seperate characters\n      thousandDisplayVote = each[0] + each[1] + \".\" + each[2] + \"k\";\n      return thousandDisplayVote;\n\n    } else if (this.votes >= 100000 && this.votes <= 999999) {\n      let thousandDisplayVote = (this.votes / 100).toString();\n      let each = thousandDisplayVote.split(\"\"); //Seperate the numbers into seperate characters\n      thousandDisplayVote = each[0] + each[1] + each[2] + \".\" + each[3] + \"k\";\n      return thousandDisplayVote;\n\n    } else if (this.votes >= 1000000 && this.votes <= 9999999) {\n      let millionDisplayVote = (this.votes / 100000).toString();\n      let each = millionDisplayVote.split(\"\"); //Seperate the numbers into seperate characters\n      millionDisplayVote = each[0] + \".\" + each[1] + \"m\";\n      return millionDisplayVote;\n\n    } else if (this.votes >= 10000000 && this.votes <= 99999999) {\n      let millionDisplayVote = (this.votes / 100000).toString();\n      let each = millionDisplayVote.split(\"\"); //Seperate the numbers into seperate characters\n      millionDisplayVote = each[0] + each[1] + \".\" + each[2] + \"m\";\n      return millionDisplayVote;\n\n    } else if (this.votes >= 100000000 && this.votes <= 999999999) {\n      let millionDisplayVote = (this.votes / 100000).toString();\n      let each = millionDisplayVote.split(\"\"); //Seperate the numbers into seperate characters\n      millionDisplayVote = each[0] + each[1] + each[2] + \".\" + each[3] + \"m\";\n      return millionDisplayVote;\n    }\n    else if (this.votes > 999999999) {\n      return \"Limit exceeded\";\n    }\n    else {\n      return this.votes;\n    }\n    // Went completely insane yet?\n  }\n\n  upvote() {\n    if (this.validated()) {\n      if (!this.voted()) {\n        this.voters.push({ user: this.CurrentUser.username, vote: \"up\" });\n        this.postService.upvote(this.CurrentUser.username, this.id, 1).subscribe();\n        this.votes++;\n        this.setVote();\n      }\n      else {\n        this.voters.forEach(voter => {\n          if (voter.user == this.CurrentUser.username) {\n            if (voter.vote == \"down\") {\n              voter.vote = \"up\";\n              this.postService.upvote(this.CurrentUser.username, this.id, 2).subscribe();\n              this.votes += 2;\n              this.setVote();\n\n            }\n            else if (voter.vote == \"up\") {\n              voter.vote = \"\";\n              this.postService.downvote(this.CurrentUser.username, this.id, 1).subscribe();\n              this.votes--;\n              this.setVote();\n\n            } else {\n              voter.vote = \"up\";\n              this.postService.upvote(this.CurrentUser.username, this.id, 1).subscribe();\n              this.votes++;\n              this.setVote();\n\n            }\n          }\n        });\n      }\n    }\n  }\n\n\n  downvote() {\n    if (this.validated()) {\n      if (!this.voted()) {\n        this.voters.push({ user: this.CurrentUser.username, vote: \"down\" });\n        this.postService.downvote(this.CurrentUser.username, this.id, 1);\n        this.votes--;\n        this.setVote();\n      } else {\n        this.voters.forEach(voter => {\n          if (voter.user == this.CurrentUser.username) {\n            if (voter.vote == \"up\") {\n              voter.vote = \"down\";\n              this.postService.downvote(this.CurrentUser.username, this.id, 2).subscribe();\n              this.votes -= 2;\n              this.setVote();\n\n            } else if (voter.vote == \"down\") {\n              voter.vote = \"\";\n              this.postService.upvote(this.CurrentUser.username, this.id, 1).subscribe();\n              this.votes++;\n              this.setVote();\n            } else {\n              voter.vote = \"down\";\n              this.postService.downvote(this.CurrentUser.username, this.id, 1).subscribe();\n              this.votes--;\n              this.setVote();\n            }\n          }\n        });\n      }\n    }\n  }\n\n  validated() {\n    if (!this.authenticated) {\n      alert(\"You must be logged in to perform this action.\");\n      return false;\n    }\n    if (this.author == this.CurrentUser.username) {\n      alert(\"You can't vote on your own post.\");\n      return false;\n    }\n    return true;\n  }\n\n  voted() {\n    for (var i = 0; i < this.voters.length; i++) {\n      if (this.voters[i].user == this.CurrentUser.username) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  setVote() {\n    this.voters.forEach(voter => {\n      if (voter.user == this.CurrentUser.username) {\n        if (voter.vote == \"up\") {\n          this.upvoted = true;\n          this.downvoted = false;\n        } else if (voter.vote == \"down\") {\n          this.upvoted = false;\n          this.downvoted = true;\n        } else {\n          this.upvoted = false;\n          this.downvoted = false;\n        }\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http:HttpClient) { }\n\n  isUnique(user){\n    return this.http.post(\"/api/auth/unique\", user);\n  }\n\n  register(user){\n    return this.http.post(\"/api/auth/register\", user);\n  }\n\n  login(user){\n    return this.http.post(\"/api/auth/login\", user);\n  }\n\n  isAuthenticated(){\n    return this.http.get(\"/api/auth/authenticated\");\n  }\n\n  getByUsername(username){\n    return this.http.post(\"/api/auth/username\", {username:username});\n  }\n\n  delete(user){\n    return this.http.request(\"delete\",\"/api/auth/delete\", {body:user});\n  }\n\n  update(user){\n    return this.http.post(\"/api/auth/update\", user);\n  }\n\n  setPostCount(user){\n    return this.http.post(\"/api/auth/postcount\", user);\n  }\n\n  setVoteCount(user){\n    return this.http.post(\"/api/auth/votecount\", user);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  constructor(private http:HttpClient) { }\n\n  getPosts(){\n    return this.http.get(\"/api/posts/all\");\n  }\n\n  getPostById(id){\n    return this.http.post(\"/api/posts/id\", {id:id});\n  }\n\n  getPostsByUser(username){\n    return this.http.post(\"/api/posts/username\", {username:username});\n  }\n\n  addPost(post){\n    var xhr = new XMLHttpRequest;\n    xhr.open('POST', '/api/posts/add', true);\n    xhr.send(post);\n    xhr.onreadystatechange = ()=>{\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        window.location.href = \"/\";\n      }\n    }\n  }\n\n  updatePost(post){\n    var xhr = new XMLHttpRequest;\n    xhr.open('POST', '/api/posts/update', true);\n    xhr.send(post);\n    xhr.onreadystatechange = ()=>{\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        alert(\"Post Updated Successfully\")\n        window.location.href = \"/\";\n      }\n    }\n  }\n\n  deletePost(id){\n    return this.http.request(\"delete\",\"/api/posts/delete\", {body:{id:id}});\n  }\n\n  editPost(id){\n    window.location.href = \"/posts/edit/\"+id;\n  }\n\n  upvote(voter, postId, num){\n    return this.http.post(\"/api/posts/upvote\", {voter:voter, id:postId, num:num});\n  }\n\n  downvote(voter, postId, num){\n    return this.http.post(\"/api/posts/downvote\", {voter:voter, id:postId, num:num});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: true\r\n  };\r\n  \r\n  /*\r\n   * In development mode, to ignore zone related error stack frames such as\r\n   * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n   * import the following file, but please comment it out in production mode\r\n   * because it will have performance impact when throw error\r\n   */\r\n  // import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n  ","import { AppBrowserModule } from '.././src/app/app.browser.module';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n} \n\nplatformBrowserDynamic().bootstrapModule(AppBrowserModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}